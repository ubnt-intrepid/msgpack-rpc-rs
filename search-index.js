var searchIndex = {};
searchIndex["client"] = {"doc":"","items":[],"paths":[]};
searchIndex["msgpack_rpc"] = {"doc":"","items":[[4,"Value","msgpack_rpc","Represents any valid MessagePack value.",null,null],[13,"Nil","","Nil represents nil.",0,null],[13,"Boolean","","Boolean represents true or false.",0,null],[13,"Integer","","Integer represents an integer.",0,null],[13,"F32","","A 32-bit floating point number.",0,null],[13,"F64","","A 64-bit floating point number.",0,null],[13,"String","","String extending Raw type represents a UTF-8 string.",0,null],[13,"Binary","","Binary extending Raw type represents a byte array.",0,null],[13,"Array","","Array represents a sequence of objects.",0,null],[13,"Map","","Map represents key-value pairs of objects.",0,null],[13,"Ext","","Extended implements Extension interface: represents a tuple of type information and a byte array where type information is an integer whose meaning is defined by applications.",0,null],[3,"Client","","A client of Msgpack-RPC",null,null],[3,"Response","","The return type of `Client::request()`, represents a future of RPC request.",null,null],[3,"Ack","","",null,null],[3,"Endpoint","","An endpoint represents a peer of MessagePack-RPC.",null,null],[11,"poll","","",1,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"new","","Create a new `Client` with background task spawned on an event loop of `handle`.",3,{"inputs":[{"name":"handle"},{"name":"unboundedsender"},{"name":"unboundedreceiver"},{"name":"unboundedsender"}],"output":{"name":"self"}}],[11,"request","","Send a request message to the server, and return a future of its response.",3,{"inputs":[{"name":"self"},{"name":"s"},{"name":"p"}],"output":{"name":"response"}}],[11,"notify","","Send a notification message to the server.",3,{"inputs":[{"name":"self"},{"name":"s"},{"name":"p"}],"output":{"name":"ack"}}],[11,"from_io","","Create a RPC endpoint from asyncrhonous I/O.",4,{"inputs":[{"name":"handle"},{"name":"t"}],"output":{"name":"self"}}],[11,"client","","Return the reference of `Client` associated with the endpoint.",4,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"into_client","","Return the instance of `Client` associated with the endpoint.",4,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"serve","","Start to serve incoming requests.",4,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"h"}],"output":{"name":"client"}}],[0,"io","","",null,null],[3,"StdioStream","msgpack_rpc::io","",null,null],[3,"ChildProcessStream","","A non-blocking stream to interact with child process.",null,null],[5,"run_stdio","","Run the RPC server on standard input/standard output, with given handler.",null,{"inputs":[{"name":"h"},{"name":"usize"}],"output":null}],[5,"run_tcp","","Run the RPC server on TCP, with given handler.",null,{"inputs":[{"name":"h"},{"name":"str"}],"output":null}],[11,"new","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"read","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"launch","","",6,{"inputs":[{"name":"handle"},{"name":"s"},{"name":"i"}],"output":{"name":"result"}}],[11,"from_builder","","",6,{"inputs":[{"name":"handle"},{"name":"command"}],"output":{"name":"result"}}],[11,"into_inner","","",6,{"inputs":[{"name":"self"}],"output":{"name":"child"}}],[11,"from","","",6,{"inputs":[{"name":"child"}],"output":{"name":"self"}}],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"read","","",6,null],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[8,"Handler","msgpack_rpc","A handler of requests/notifications.",null,null],[16,"RequestFuture","","The future returned from `Self::handle_request()`",7,null],[16,"NotifyFuture","","The future returned from `Self::handle_notification()`",7,null],[10,"handle_request","","Handler function to handle a request.",7,null],[10,"handle_notification","","Handler function to handle a notification.",7,null],[11,"is_nil","","Returns true if the `Value` is a Null. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bool","","Returns true if the `Value` is a Boolean. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the `Value` is convertible to an i64. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the `Value` is convertible to an u64. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_f32","","Returns true if (and only if) the `Value` is a f32. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if (and only if) the `Value` is a f64. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_str","","Returns true if the `Value` is a String. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bin","","Returns true if the `Value` is a Binary. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_map","","Returns true if the `Value` is a Map. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ext","","Returns true if the `Value` is an Ext. Returns false otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_i64","","If the `Value` is an integer, return or cast it to a i64. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_u64","","If the `Value` is an integer, return or cast it to a u64. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_str","","If the `Value` is a String, returns the associated str. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_slice","","If the `Value` is a Binary or a String, returns the associated slice. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_array","","If the `Value` is an Array, returns the associated vector. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_map","","If the `Value` is a Map, returns the associated vector of key-value tuples. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ext","","If the `Value` is an Ext, returns the associated tuple with a ty and slice. Returns None otherwise.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deserialize_any","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",0,null],[11,"deserialize_newtype_struct","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",0,null],[11,"deserialize_identifier","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",0,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",0,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"deserialize","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",0,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"cow"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"isize"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"i16"}],"output":{"name":"value"}}],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"cow"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"bool"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"u16"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"u8"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"value"}}],[11,"from","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"value"}}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"value"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"value"}}]],"paths":[[4,"Value"],[3,"Response"],[3,"Ack"],[3,"Client"],[3,"Endpoint"],[3,"StdioStream"],[3,"ChildProcessStream"],[8,"Handler"]]};
initSearch(searchIndex);
